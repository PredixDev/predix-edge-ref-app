{
    "blocks": {
      "opcua": {
        "type": "opcuasubflat",
        "config": {
            "transport_addr": "opc-tcp://opcua-simulator:4334/UA/PredixEdge",
            "log_level": "debug",
            "data_map": [
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-compressionratio",
                "id": "ns=1;s=Simulator.Device1.FLOAT1"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-dischargepressure",
                "id": "ns=1;s=Simulator.Device1.FLOAT2"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-suctionpressure",
                "id": "ns=1;s=Simulator.Device1.FLOAT3"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-maximumpressure",
                "id": "ns=1;s=Simulator.Device1.FLOAT4"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-minimumpressure",
                "id": "ns=1;s=Simulator.Device1.FLOAT5"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-temperature",
                "id": "ns=1;s=Simulator.Device1.FLOAT6"
              },
              {
                "alias": "Compressor-CMMS-Compressor-2018.crank-frame-velocity",
                "id": "ns=1;s=Simulator.Device1.FLOAT7"
              }
            ]
        }
      },
      "flat_to_timeseries": {
        "type": "flattotimeseries",
        "config": {
          "attributes": {
            "machine_type": "opcua"
          }
        }
      },
      "mqtt": {
        "type": "cdpout",
        "config": {
          "transport_addr": "mqtt-tcp://predix-edge-broker",
          "node_ref": "app_data",
          "method": "pub",
          "log_level": "debug",
          "log_name": "opcua_mqtt"
        }
      }
    },
    "mappings": {
      "opcua:output": "flat_to_timeseries:input",
      "flat_to_timeseries:output": "mqtt:input"
    }
  }
